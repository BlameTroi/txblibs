* buildhdr -- inspired by Apoorva Joshi's single_header_packer.py

I learned about Apoorva Joshi's single_header_packer.py from Micha Mettke's Nukklear GUI library. The original is in the public domain under the unlicense, but I'm making a C version for my own use and to keep me busy. Hobby code is fun!

There's nothing really new here, but I decided to roll my own regular expressions and file globbing support.

I do my editing in Emacs and while eglot and tree-sitter and such work well, they aren't built for editing a single file header library. The imenu list is thrown off by the nested defines, as is xref goto.

With the single header packer I can build a single header library from working 'live' code.

** licensing

Public domain. 

** documentation

Unlike the original version, I prefer to let the shell handle file globbing and environment variable expansion. That's what it's there for. Because of this, filenames are space separated instead of comma separated. I regard spaces in filenames as a great evil, but if you must have them they will work if you escape or quote them.

I thought about adding a standard licenses option but that can be handled with ~--intro~ and ~--outro~.

Output is written to standard output.

Files listed in ~--priv~ and will have their ~#includes~ in ~--pub~ suppressed.

I end my code with Emacs and use form feeds as a visual separator. They are removed from files in ~--priv~ and ~--pub~.

#+begin_example

buildhdr --macro <macro> [--intro <files>] --pub <files> --priv <files> [--outro <files>]

where <files> is space separated list of files. e.g. --pub defs/*.h str/*.h --priv inc/*.h defs/*.c str/*.c

The resulting code is packed as follows:

/*
[intro file contents]
*/

#ifndef <macro>_SINGLE_HEADER
#define <macro>_SINGLE_HEADER
[public header file contents]
#endif /* <macro>_SINGLE_HEADER */

#ifdef <macro>_IMPLEMENTATION
[private header and source file contents]
#endif /* <macro>_IMPLEMENTATION */

/*
[outro file contents]
*/
#+end_example
