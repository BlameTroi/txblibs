# CMakeLists.txt for txblibs
#
# cmake -G "Ninja Multi-Config" -S source -B build
# cmake --build build --config Release or Debug or RelWithDebInfo ...
#
# this builds the unit tests for the libraries. to generate the
# release includes use Makefile in the root directory to run
# buildhdr which bundles up the xx.h and xx.c files into txbxx.h
# for client use.

cmake_minimum_required(VERSION 3.5)

project(
  TXBONE
  VERSION 0.0.0.2
  DESCRIPTION "single header c libraries mostly for my personal use"
  HOMEPAGE_URL "https://github.com/BlameTroi/txblibs"
  LANGUAGES C
)

# i'm picky about compiler and options
#
# cmake and/or ninja default these so that the debug configurations
# include -g while the release configuration removes -g and adds
# -DNDEBUG -O3.
#
# i use assert for error handling so for compiled code that counts
# on assert i need to manage NDEBUG better.
#
# the only executables produced by this project are unit tests.

set(
  CMAKE_C_COMPILER "clang"
)

# cmake is a moving target, and the compile options conditionals via
# if() don't work (if they ever did). the following passes options to
# each build configuration properly.
#
# first, create options variable strings for each configuration.
#
# then, for each target, specify:
#
# target_<step>_options(generator_expression:replacement)
#
# for each possible target configuration using generator expressions
# for your configurations.

set(MY_RELEASE_OPTIONS "-Wall -Werror -pedantic-errors -std=c18")
set(MY_RELWITHDEBINFO_OPTIONS "-Wall -Werror -pedantic-errors -std=c18 -g")
set(MY_DEBUG_OPTIONS "-Wall -Werror -pedantic-errors -std=c18 -g -fsanitize=address")
set(MY_DEBUG_LINK_OPTIONS "-fsanitize=address")

add_executable(unitone "${CMAKE_CURRENT_SOURCE_DIR}/unit/unitone.c"
  "${CMAKE_CURRENT_SOURCE_DIR}/src/txbone.c"
  "${CMAKE_CURRENT_SOURCE_DIR}/src/txblibs.c")
target_include_directories(unitone PUBLIC
  "${CMAKE_CURRENT_SOURCE_DIR}/inc"
  "${CMAKE_CURRENT_SOURCE_DIR}/txblibs"
  "${CMAKE_CURRENT_SOURCE_DIR}/minunit")
target_link_options(unitone PUBLIC "$<$<CONFIG:DEBUG>:SHELL:${MY_DEBUG_LINK_OPTIONS}>")
target_compile_options(unitone PUBLIC "$<$<CONFIG:RELWITHDEBINFO>:SHELL:${MY_REL_DEB_OPTIONS}>")
target_compile_options(unitone PUBLIC "$<$<CONFIG:DEBUG>:SHELL:${MY_DEBUG_OPTIONS}>")
target_compile_options(unitone PUBLIC "$<$<CONFIG:RELEASE>:SHELL:${MY_RELEASE_OPTIONS}>")
